# pull official python alpine image
FROM python:3.7-alpine

# Set Environment Variable
ENV PYTHONUNBUFFERED 1
ENV C_FORCE_ROOT true

RUN mkdir -p /opt/django/example

# Creating Work Directory
WORKDIR /opt/django/example

# Adding mandatory packages to docker
RUN apk update && apk add --no-cache \
    mariadb-dev \
    zlib \
    jpeg 

# Installing temporary packages required for installing requirements.pip 
RUN apk add --no-cache --virtual build-deps \
    gcc \  
    python3-dev \ 
    musl-dev \
    zlib-dev \
    jpeg-dev 

# Update pip
RUN pip install --upgrade pip

# Installing requirements.pip from project
ADD example/requirements.txt /opt/django/example/
RUN pip install --no-cache-dir -r requirements.txt
ADD example/ /opt/django/example/

# removing temporary packages from docker and removing cache 
RUN apk del build-deps && \
    find -type d -name __pycache__ -prune -exec rm -rf {} \; && \
    rm -rf ~/.cache/pip

# CMD will run when this dockerfile is running
CMD ["sh", "-c", "python manage.py collectstatic --no-input; python manage.py migrate; gunicorn -b :80 --workers=3 example.wsgi:application"]
